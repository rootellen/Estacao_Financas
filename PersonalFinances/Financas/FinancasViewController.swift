//
//  FinancasViewController.swift
//  PersonalFinances
//
//  Created by Ruth Ellen da Silva on 17/12/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FinancasDisplayLogic: class {
    func displayFinances(viewModel: Financas.FinancaResponse.ViewModel)
}

protocol NovaFinancaDelegate: class {
    func addFinance()
}

class FinancasViewController: UITableViewController, FinancasDisplayLogic, NovaFinancaDelegate {
    
  var interactor: FinancasBusinessLogic?
  var router: (NSObjectProtocol & FinancasRoutingLogic)?
    
    var financas: [Financas.FinancaResponse.Get] = []

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
  
    // MARK: - Setup Clean Code Design Pattern

    private func setup() {
        let viewController = self
        let interactor = FinancasInteractor()
        let presenter = FinancasPresenter()
        let router = FinancasRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
  }

  // MARK: - Routing

  override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
    let vc = segue.destination as! NovaFinancaViewController
    vc.delegate = self
  }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        loadData()
    }

    //MARK: - receive events from UI
    @IBOutlet weak var lbSaldo: UILabel!
    @IBOutlet weak var scFiltro: UISegmentedControl!
    @IBOutlet weak var lbReceitas: UILabel!
    @IBOutlet weak var lbDespesas: UILabel!

    @IBAction func changeFilter(_ sender: Any) {
        loadData()
    }
    
    @IBAction func btNovaFinanca(_ sender: Any) {
        router?.routeToNovaFinanca()
    }
    
    // MARK: - request data from FinancasInteractor

    func loadData() {
        interactor?.handleFetchFinances()
    }
    
    func addFinance() {
        loadData()
    }

    // MARK: - display view model from FinancasPresenter

    func displayFinances(viewModel: Financas.FinancaResponse.ViewModel) {
        financas.removeAll()
        financas.append(contentsOf: viewModel.financialExpensesResponseList)
        financas.append(contentsOf: viewModel.financialIncomeResponseList)
        DispatchQueue.main.async {
            self.lbReceitas.text = viewModel.totalIncome
            self.lbDespesas.text = viewModel.totalExpense
            self.lbSaldo.text = viewModel.total
            self.tableView.reloadData()
        }
    }
    
    // MARK: - Table view data source

    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if scFiltro.selectedSegmentIndex == 0 {
            let filter = financas.filter( {$0.tipo == Tipo.RECEITA.rawValue} )
            return filter.count
        } else {
            let filter = financas.filter( {$0.tipo == Tipo.DESPESA.rawValue} )
            return filter.count
        }
    }

    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as! FinancaTableViewCell
        
        var filter: [Financas.FinancaResponse.Get] = []
        if scFiltro.selectedSegmentIndex == 0 {
            filter = financas.filter( {$0.tipo == Tipo.RECEITA.rawValue} )
        } else {
            filter = financas.filter( {$0.tipo == Tipo.DESPESA.rawValue} )
        }
        
        let financa = filter[indexPath.row]
        cell.prepare(with: financa)

        return cell
    }

}

class FinancaTableViewCell: UITableViewCell {

    @IBOutlet weak var lbCategoria: UILabel!
    @IBOutlet weak var lbValor: UILabel!
    
    override func awakeFromNib() {
        super.awakeFromNib()
    }

    override func setSelected(_ selected: Bool, animated: Bool) {
        super.setSelected(selected, animated: animated)
    }
    
    func prepare(with financa: Financas.FinancaResponse.Get) {
        var categoria: String?
        switch financa.categoria {
        case "SAUDE":
            categoria = "Saúde"
        case "TRANSPORTE":
            categoria = "Transporte"
        case "ALIMENTACAO":
            categoria = "Alimentação"
        case "SALARIO":
            categoria = "Salário"
        case "ALUGUEL":
            categoria = "Aluguel"
        default:
            categoria = "Outros"
        }
        lbCategoria.text = categoria
        lbValor.text = "R$ \(String(format: "%.02f", financa.valor))"
    }
}
